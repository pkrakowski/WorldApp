# envvars - default environment variables for apache2ctl

# this won't be correct after changing uid
unset HOME

# for supporting multiple apache2 instances
if [ "${APACHE_CONFDIR##/etc/apache2-}" != "${APACHE_CONFDIR}" ] ; then
	SUFFIX="-${APACHE_CONFDIR##/etc/apache2-}"
else
	SUFFIX=
fi

# Since there is no sane way to get the parsed apache2 config in scripts, some
# settings are defined via environment variables and then used in apache2ctl,
# /etc/init.d/apache2, /etc/logrotate.d/apache2, etc.
export APACHE_RUN_USER=www-data
export APACHE_RUN_GROUP=www-data
# temporary state file location. This might be changed to /run in Wheezy+1
export APACHE_PID_FILE=/var/run/apache2$SUFFIX/apache2.pid
export APACHE_RUN_DIR=/var/run/apache2$SUFFIX
export APACHE_LOCK_DIR=/var/lock/apache2$SUFFIX
# Only /var/log/apache2 is handled by /etc/logrotate.d/apache2.
export APACHE_LOG_DIR=/var/log/apache2$SUFFIX

## The locale used by some modules like mod_dav
export LANG=C
## Uncomment the following line to use the system default locale instead:
#. /etc/default/locale

export LANG

## The command to get the status for 'apache2ctl status'.
## Some packages providing 'www-browser' need '--dump' instead of '-dump'.
#export APACHE_LYNX='www-browser -dump'

## If you need a higher file descriptor limit, uncomment and adjust the
## following line (default is 8192):
#APACHE_ULIMIT_MAX_FILES='ulimit -n 65536'

## If you would like to pass arguments to the web server, add them below
## to the APACHE_ARGUMENTS environment.
#export APACHE_ARGUMENTS=''

## Enable the debug mode for maintainer scripts.
## This will produce a verbose output on package installations of web server modules and web application
## installations which interact with Apache
#export APACHE2_MAINTSCRIPT_DEBUG=1
#

{% if ansible_nodename.startswith("clientnode") %}

export API_URL=http://{{ appgw_private_ip }}:{{ appgw_private_port }}
export STATIC_HOST=

{% elif ansible_nodename.startswith("apinode") %}

export MYSQL_USER={{ mysql_user }}@{{ mysql_servername }}
export MYSQL_PASSWORD={{ mysql_user_password }}
export MYSQL_HOST={{ mysql_host }}
export MYSQL_DBNAME={{ mysql_dbname }}
export CACHE_TYPE=redis
export CACHE_REDIS_URL={{ redis_url }}


{% elif ansible_nodename.startswith("adminnode") %}

export MYSQL_USER={{ mysql_user }}@{{ mysql_servername }}
export MYSQL_PASSWORD={{ mysql_user_password }}
export MYSQL_HOST={{ mysql_host }}
export MYSQL_DBNAME={{ mysql_dbname }}
export ADMIN_USER={{ admin_username }}
export ADMIN_PASSWORD={{ admin_password }}
export SECRET_KEY={{ secret_key }}

{% else %}

{% endif %}